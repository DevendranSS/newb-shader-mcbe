// __multiversion__

#include "fragmentVersionCentroid.h"

#include "uniformShaderConstants.h"

#include "config_utilities/color_correction.h"

LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;

#if __VERSION__ >= 300
	_centroid varying vec4 uv;
#else
	varying vec4 uv;
#endif

#ifdef ENABLE_FOG
	varying vec4 fogColor;
	varying vec4 mistColor;
#endif

#ifdef ENABLE_LIGHT
	varying vec4 light;
#endif

#ifndef DISABLE_TINTING
	varying vec4 color;
#endif

void main()
{
	vec4 diffuse = texture2D(TEXTURE_0, uv.xy);
	vec4 base = texture2D(TEXTURE_0, uv.zw);

	#ifndef DISABLE_TINTING
		base.a = mix(diffuse.r * diffuse.a, diffuse.a, color.a);
		base.rgb *= color.rgb;
	#endif

	// converting to linear space
	base.rgb *= base.rgb;

	#ifdef ENABLE_LIGHT
		// apply lighting
		base.rgb *= light.rgb;
	#endif

	#ifdef ENABLE_FOG
		//apply mist and fog
		base.rgb = mix( base.rgb, mistColor.rgb, mistColor.a );
		base.rgb = mix( base.rgb, fogColor.rgb, fogColor.a );
	#endif

	// color correction
	base.rgb = colorCorrection(base.rgb);

	#ifdef UI_ENTITY
		base.a *= HUD_OPACITY;
	#endif

	gl_FragColor = base;
}