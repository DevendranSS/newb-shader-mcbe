// __multiversion__

#include "fragmentVersionCentroid.h"

#ifndef BYPASS_PIXEL_SHADER

#if __VERSION__ >= 300
	#if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
		_centroid in highp vec2 uv0;
		_centroid in highp vec2 uv1;
	#else
		_centroid in vec2 uv0;
		_centroid in vec2 uv1;
	#endif
#else
	varying vec2 uv0;
	varying vec2 uv1;
#endif

varying vec4 color;
varying vec4 mistColor;

#ifdef SEASONS
	varying vec3 sCol;
#endif

#ifdef FOG
	varying lowp float wetRefl;
#endif

#if defined(BLEND) || defined(FAR_BLEND)
	#define MAYBE_WATER
	varying lowp float water;
#endif

#endif

#include "uniformShaderConstants.h"
#include "util.h"

#include "config_utilities/color.h"
#include "config_utilities/extra.h"

LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;

void main()
{

#ifdef BYPASS_PIXEL_SHADER

	gl_FragColor = vec4(0, 0, 0, 0);
	return;

#else 

#if USE_TEXEL_AA
	vec4 diffuse = texture2D_AA(TEXTURE_0, uv0);
#else
	vec4 diffuse = texture2D(TEXTURE_0, uv0);
#endif

diffuse.rgb *= diffuse.rgb;

#ifdef SEASONS_FAR
	diffuse.a = 1.0;
#endif

#if USE_ALPHA_TEST
	#ifdef ALPHA_TO_COVERAGE
		if(diffuse.a < 0.05){ discard; }
	#else
		if(diffuse.a < 0.5){ discard; }
	#endif
#endif
	
vec4 inColor = color;

#if defined(BLEND)
	diffuse.a *= inColor.a;
#endif

#if !defined(ALWAYS_LIT)
	vec3 tint = texture2D( TEXTURE_1, uv1).rgb;
	tint = mix(tint.bbb,tint*tint,0.8+(0.2*uv1.y*uv1.y*uv1.y));

	#ifdef GLOWY_ORES
	if(diffuse.a<0.06 && diffuse.a>0.0){
		inColor.rgb = max(inColor.rgb,(vec3(GLOWY_ORES) + 0.6*diffuse.rgb)*(1.0-uv1.y));
		tint = vec3(0.2) + 0.8*tint;
	}
	#endif

	diffuse.rgb *= tint;
#endif

#ifndef SEASONS
	#if !USE_ALPHA_TEST && !defined(BLEND)
		diffuse.a = inColor.a;
	#endif
#else
	diffuse.rgb *= mix(vec3(1.0), texture2D( TEXTURE_2, sCol.rg).rgb*2.0, sCol.b);

	diffuse.rgb *= inColor.a;
	diffuse.a = 1.0;
#endif

#ifdef MAYBE_WATER
	if(water>0.5){
		diffuse.rgb = diffuse.bbb;
		diffuse.a = inColor.a;
	}
#endif

diffuse.rgb *= inColor.rgb;

float glow = uv1.x*uv1.x;
glow *= glow;
diffuse.rgb *= 1.0 + glow*glow*0.2;

#ifdef FOG
	if(wetRefl > 0.0){
		diffuse.rgb += vec3(wetRefl);
	}
#endif

diffuse.rgb = mix(diffuse.rgb, mistColor.rgb, mistColor.a );

diffuse.rgb = colorCorrection(diffuse.rgb);

	gl_FragColor = diffuse;

#endif // BYPASS_PIXEL_SHADER
}
